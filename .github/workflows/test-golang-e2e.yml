name: E2E-golang

on:
  push:
    branches: your-branch
  workflow_dispatch:
  #schedule:
  #  - cron: "0 18 * * *" # TimeZone: UTC 0

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  DOCKER_REPO: registry.cn-guangzhou.aliyuncs.com/cc-aliyun/rocketmq-ci

jobs:
  deploy:
    if: ${{ success() }}
    name: Deploy RocketMQ
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: [develop-94402c3e-906d-40ab-9161-7418164df551-ubuntu]
    steps:
      - uses: chi3316/rocketmq-test-tool@9d9eb9d604b28f89216570bb7caa494a000df0aa
        name: Deploy rocketmq
        with:
          action: "deploy"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          chart-git: "https://mirror.ghproxy.com/https://github.com/chi3316/rocketmq-docker"
          chart-branch: "fix-e2e"
          chart-path: "./rocketmq-k8s-helm"
          job-id: ${{ strategy.job-index }}
          helm-values: |
            nameserver:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}
            broker:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}
            proxy:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}
  test-e2e-golang:
    if: ${{ success() }}
    name: Test E2E golang
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: [develop-94402c3e-906d-40ab-9161-7418164df551-ubuntu]
    steps:
      - uses: chi3316/rocketmq-test-tool@9d9eb9d604b28f89216570bb7caa494a000df0aa
        name: e2e test
        with:
          action: "test"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          test-code-git: "https://mirror.ghproxy.com/https://github.com/apache/rocketmq-e2e"
          test-code-branch: "master"
          test-code-path: golang
          test-cmd: |
            cd ../common && mvn -Prelease -DskipTests clean package -U
            cd ../rocketmq-admintools && source bin/env.sh
            cd ../golang && go get -u github.com/apache/rocketmq-clients/golang && gotestsum --junitfile ./target/surefire-reports/TEST-report.xml ./mqgotest/... -timeout 2m  -v
          job-id: 0
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/test_report/TEST-*.xml'
          annotate_only: true
          include_passed: true
          detailed_summary: true
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-golang-log.txt
          path: testlog.txt
  clean:
    if: always()
    name: Clean
    needs: [test-e2e-golang]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: [develop-94402c3e-906d-40ab-9161-7418164df551-ubuntu]
    steps:
      - uses: chi3316/rocketmq-test-tool@9d9eb9d604b28f89216570bb7caa494a000df0aa
        name: clean
        with:
          action: "clean"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          job-id: ${{ strategy.job-index }}
          
